<HTML>
<HEAD>
<TITLE ID='L_ProfileSel_DialogTitle'>Profile Selection</TITLE>
<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=utf-8'>
<LINK REL='stylesheet' TYPE='text/css' HREF='/widgets/bizdesk.css' ID='mainstylesheet'>

<STYLE>
TABLE
{
    margin:0px;padding:0px
}

TR
{
    margin:0px;padding:0px
}

TD
{
    margin:0px;padding:0px
}
</STYLE>

<SCRIPT LANGUAGE='VBScript'>
Option Explicit

' Profile-Schema XML tag-names

Const gc_sDocument  = "Document"
Const gc_sCatalog   = "Catalog"
Const gc_sProfile   = "Profile"

Dim g_xmlCatalogsDoc
Dim g_strProfilePath
Dim g_strRetVal
Dim g_strHelpPath
Dim winHelpWindow

'----------------------------------------------------------------------------
' initDialog
'
' Description:
'     Sets up the dialog with the appropriate display info given the
'     passed-in arguments.
'----------------------------------------------------------------------------
Sub initDialog()

    Dim elXML
    Dim elButton
    Dim sdArgs

    g_strProfilePath = Null

    Set elXML = document.createElement("XML")
      document.body.insertAdjacentElement "beforeEnd", elXML
      elXML.id = "xmlisCatalogDoc"

    Set elXML = document.createElement("XML")
      document.body.insertAdjacentElement "beforeEnd", elXML
      elXML.id = "xmlisCatalogView"
      elXML.XMLDocument.loadXML "<?xml version='1.0'?>" & _
        "<xsl:stylesheet xmlns:xsl=""http://www.w3.org/TR/WD-xsl"">" &_
          "<!-- document root -->" &_
          "<xsl:template match=""/"">" &_
            "<xsl:apply-templates select=""//Document"" />" &_
          "</xsl:template>" &_
          "<!-- Document element -->" &_
          "<xsl:template match=""Document"">" &_
            "<DIV ID='xvRoot'>" &_
              "<xsl:apply-templates />" &_
            "</DIV>" &_
          "</xsl:template>" &_
          "<!-- Catalog elements -->" &_
          "<xsl:template match=""Catalog[@name != 'Site Terms']"">" &_
            "<DIV CLASS='clsXVGroupNoSel' TABINDEX='0'>" &_
              "<xsl:attribute name=""ID""><xsl:value-of select=""@name"" /></xsl:attribute>" &_
              "<xsl:attribute name=""TITLE""><xsl:value-of select=""@description"" /></xsl:attribute>" &_
              "<NOBR>" &_
              "<SPAN ID='xvMarker'>4</SPAN>" &_
              "<xsl:value-of select=""@displayName"" />" &_
              "</NOBR>" &_
              "<DIV ID='xvGroup' CLASS='clsXVClosed'>" &_
                "<xsl:apply-templates />" &_
              "</DIV>" &_
            "</DIV>" &_
          "</xsl:template>" &_
          "<!-- Profile elements -->" &_
          "<xsl:template match=""Profile"">" &_
            "<DIV CLASS='clsXVItem' TABINDEX='0'>" &_
              "<xsl:attribute name=""ID""><xsl:value-of select=""@name"" /></xsl:attribute>" &_
              "<xsl:attribute name=""TITLE""><xsl:value-of select=""@description"" /></xsl:attribute>" &_
              "<NOBR>" &_
              "<SPAN ID='xvMarker'><xsl:comment>foo</xsl:comment></SPAN>" &_
              "<xsl:value-of select=""@displayName"" />" &_
              "</NOBR>" &_
            "</DIV>" &_
          "</xsl:template>" &_
        "</xsl:stylesheet>"


    ' Process the input arguments.
    Set sdArgs = window.dialogArguments
    g_strRetVal = ""
    g_strHelpPath = ""
    Set g_xmlCatalogsDoc = sdArgs.Item("catalogDoc")
    
    g_strHelpPath = sdArgs.Item("helpPath")
    If g_strHelpPath = "" Then
        ' Hide the help button
        Set elButton = L_Help_Button
        elButton.style.display = "none"
    Else
        ' Complete help path
        g_strHelpPath = g_strHelpPath & "docs/default.asp?helptopic=cs_ft_usersgrps_FFKV.htm"
    End If

    xmlisCatalogDoc.XMLDocument.loadXML g_xmlCatalogsDoc.xml
    divCatalogs.addBehavior "/widgets/profilebldrHTC/XMLView.htc"

    ' This is such a dirty trick -- resizeTo won't work, though.
    window.dialogWidth = CStr(document.body.scrollWidth + 28) & "px"
    window.dialogHeight = CStr(document.body.scrollHeight + 28) & "px"
    
    ' Set initial focus to 'Cancel' button
    Set elButton = L_Cancel_Button
    Call elButton.focus()
End Sub


Sub SelectionHandler()
    Dim rgstrItemPaths
    Dim xmlItem
    Dim elButton
    
    ' Initially disable OK button and clear the current selected item.
    Set elButton = L_OK_Button
    elButton.disabled = True
    g_strProfilePath = Null

    If divCatalogs.GetSelectedCount() = 1 Then
        ' Find out what is selected.
        rgstrItemPaths = divCatalogs.GetSelectedItems()
        Set xmlItem = getItemXMLFromPath(rgstrItemPaths(0))

        ' If the selected item is a profile, we can use it.
        If xmlItem.tagName = gc_sProfile Then
            ' Update the current selection.
            g_strProfilePath = rgstrItemPaths(0)
            ' Enable/focus OK button, since something good is selected.
            elButton.disabled = False
            Call elButton.focus()
        End If
    End If
End Sub


Function getItemXMLFromPath(strItemPath)
    Dim xmlItem
    Dim rgstrPathParts
    Dim i
    Dim strXSL

    rgstrPathParts = Split(strItemPath, ".")

    strXSL = gc_sDocument
    For i = 0 To UBound(rgstrPathParts)
        strXSL = strXSL & "/*[@name='" & rgstrPathParts(i) & "']"
    Next
    Set xmlItem = g_xmlCatalogsDoc.selectSingleNode(strXSL)

    Set getItemXMLFromPath = xmlItem
End Function


' Handler for "OK" button onClick event.  Causes window to fire the
' onUnload event.
Sub onOKBtnClicked()
    g_strRetVal = g_strProfilePath
    window.close
End Sub


' Handler for "Cancel" button onClick event.  Causes window to fire the
' onUnload event.
Sub onCancelBtnClicked()
    window.close
End Sub

Sub onHelpBtnClicked()
    if typename(winHelpWindow) = "HTMLWindow2" then winHelpWindow.close
		set winHelpWindow = window.open(g_strHelpPath, "winHelpWindow", _
						 "height=500,width=700,status=no,toolbar=yes,menubar:no,resizable=yes")
End Sub


' Handler for the window's onUnload event.
Sub closeDialog()
    window.returnValue = g_strRetVal
End Sub

</SCRIPT>

</HEAD>

<BODY STYLE="PADDING-RIGHT: 16px; PADDING-LEFT: 16px; PADDING-BOTTOM: 16px; MARGIN: 16px; OVERFLOW: hidden; PADDING-TOP: 16px" onload='initDialog()' onunload='closeDialog()'>
<TABLE STYLE="WIDTH: 100%; HEIGHT: 200px">
    <TR STYLE="HEIGHT: 20px">
        <TD ID='L_ProfileSel_Text' STYLE="WIDTH: 100%">Select a Profile:</TD>
    </TR>
    <TR>
        <TD>
          <DIV ID='divCatalogs' STYLE="BORDER-RIGHT: 2px
              inset; BORDER-TOP:
              2px inset;
              OVERFLOW: auto; BORDER-LEFT: 2px inset; BORDER-BOTTOM: 2px inset; HEIGHT: 100%; BACKGROUND-COLOR: white" 
      TABINDEX=0 onDeselectItem="SelectionHandler()" 
      onSelectItem="SelectionHandler()" XSLViewID="xmlisCatalogView" 
      XMLDataID="xmlisCatalogDoc">
              <H3 ID='L_ProfileLoad_Text' ALIGN='center'>Loading Profiles, please wait...</H3>
          </DIV>
        </TD>
    </TR>
</TABLE>

<DIV ALIGN='right' STYLE="PADDING-TOP: 16px">
  <BUTTON ID='L_OK_Button' DISABLED onclick='onOKBtnClicked()' STYLE="WIDTH: 80px" TABINDEX=0>OK</BUTTON>
  <BUTTON ID='L_Cancel_Button' onclick='onCancelBtnClicked()' STYLE="WIDTH: 80px" TABINDEX=0>Cancel</BUTTON> 
  <BUTTON id=L_Help_Button style="WIDTH: 80px" onclick=onHelpBtnClicked() tabIndex=0>Help</BUTTON>
</DIV>

</BODY>
</HTML>
