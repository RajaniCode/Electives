--/ Copyright (c) Microsoft Corporation.  All rights reserved. 
--/  
--/ THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
--/ WHETHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
--/ WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
--/ THE ENTIRE RISK OF USE OR RESULTS IN CONNECTION WITH THE USE OF THIS CODE 
--/ AND INFORMATION REMAINS WITH THE USER. 
--/  
------------------------------------------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[bts_CleanupMsgbox]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[bts_CleanupMsgbox]
GO

CREATE PROCEDURE [dbo].[bts_CleanupMsgbox]
@fLeaveActSubs int = 1
AS


set nocount on
set transaction isolation level read committed

declare @tnActiveTable tinyint

--Clean up simple tables
truncate table ConvoySetInstances
truncate table Fragments
truncate table MessageParts
truncate table MessagePredicates
truncate table MessageProps
truncate table Parts
truncate table MessageRefCountLog1
truncate table MessageRefCountLog2
truncate table MessageRefCountLogTotals
truncate table PartRefCountLog1
truncate table PartRefCountLog2
truncate table PartRefCountLogTotals
truncate table MessageZeroSum
truncate table PartZeroSum
truncate table Spool
truncate table Instances
truncate table InstancesSuspended
truncate table InstancesPendingOperations
truncate table ProcessHeartbeats

--the tracking data table is no longer a table. It is a view so we need to truncate the underlying tables
declare @partID int, @destID int, @maxPartition int, @maxDestination int, @tbl nvarchar(128)
set @maxPartition = 4
set @maxDestination = 2
set @destID = 0
WHILE (@destID < @maxDestination)
BEGIN
	set @partID = 0
	WHILE (@partID < @maxPartition)
	BEGIN

		set @tbl = '[dbo].[TrackingData_' + CAST(@destID AS nchar(1)) + '_' + CAST(@partID as nchar(1)) + ']'
		exec( 'TRUNCATE TABLE ' +  @tbl)
		set @partID = @partID + 1
	END

	set @destID = @destID + 1
END

truncate table Tracking_Fragments1
truncate table Tracking_Parts1
truncate table Tracking_Spool1
truncate table Tracking_Fragments2
truncate table Tracking_Parts2
truncate table Tracking_Spool2
truncate table TrackingMessageReferences

-- Inserting Restart Message for use in service recovery
INSERT INTO Spool (uidMessageID, nNumParts, nCounter, imgContext) VALUES (N'61EAA7FC-AC85-42d9-BF3E-1BED258B82BE', 0, 0, 0x

-- Inserting Suspend Control message
INSERT INTO Spool (uidMessageID, nNumParts, nCounter, imgContext) VALUES (N'2BE3D5B8-5685-40F2-BD97-51ADA3D02347', 0, 0, 0x

-- Inserting Terminate Control message
INSERT INTO Spool (uidMessageID, nNumParts, nCounter, imgContext) VALUES (N'57E5E753-0207-435D-8BE7-2B9F3C6556F9', 0, 0, 0xD4E0906C1849D311A24200C04F60A53303000000000000001E000000420069007A00540061006C006B0043006F006E00740072006F006C000000020000000008002E000000410064006D0069006E005400650072006D0069006E0061007400650049006E007300740061006E00630065000000000000000C0000004A006F006200490044000000020000000008004E0000007B00350032003500390031004600310031002D0046003700370034002D0034003600330038002D0042004300390041002D003200380034003800380034003600300034003500450032007D000000090000009800000050006100720074004E0061006D00650073005E0068007400740070003A002F002F0073006300680065006D00610073002E006D006900630072006F0073006F00660074002E0063006F006D002F00420069007A00540061006C006B002F0032003000300033002F006D006500730073006100670065006100670065006E0074002D00700072006F00700065007200740069006500730000000100000001082001000000000000000000)

--Inserting Resume in Debug Mode message
INSERT INTO Spool (uidMessageID, nNumParts, nCounter, imgContext) VALUES (N'50D173AF-5D6F-4D5F-AE23-1A7178CEBDC3', 0, 0, 0xD4E0906C1849D311A24200C04F60A53303000000000000001E000000420069007A00540061006C006B0043006F006E00740072006F006C0000000200000000080026000000410064006D0069006E004400650062007500670049006E007300740061006E00630065000000000000000C0000004A006F006200490044000000020000000008004E0000007B00330032003800330030004500450045002D0035004400330041002D0034003700370037002D0041003200440035002D003100320033004100450035004600340044004500420039007D000000090000009800000050006100720074004E0061006D00650073005E0068007400740070003A002F002F0073006300680065006D00610073002E006D006900630072006F0073006F00660074002E0063006F006D002F00420069007A00540061006C006B002F0032003000300033002F006D006500730073006100670065006100670065006E0074002D00700072006F00700065007200740069006500730000000100000001082001000000000000000000)

-- Inserting refcounts for restart, suspend and terminate control messages
INSERT INTO MessageRefCountLogTotals (uidMessageID, snRefCount) VALUES (N'61EAA7FC-AC85-42d9-BF3E-1BED258B82BE', 1)
INSERT INTO MessageRefCountLogTotals (uidMessageID, snRefCount) VALUES (N'57E5E753-0207-435D-8BE7-2B9F3C6556F9', 1)
INSERT INTO MessageRefCountLogTotals (uidMessageID, snRefCount) VALUES (N'2BE3D5B8-5685-40F2-BD97-51ADA3D02347', 1)
INSERT INTO MessageRefCountLogTotals (uidMessageID, snRefCount) VALUES (N'50D173AF-5D6F-4D5F-AE23-1A7178CEBDC3', 1)

SELECT TOP 1 @tnActiveTable = tnActiveTable FROM ActiveRefCountLog WITH (ROWLOCK REPEATABLEREAD) WHERE fType = 2 OPTION (KEEPFIXED PLAN)

if (@tnActiveTable = 1)
BEGIN
	if (@fLeaveActSubs <> 0)
	BEGIN
		INSERT INTO PredicateGroupZeroSum1 WITH (ROWLOCK)
		SELECT pg.uidPredicateORGroupID, pg.uidPredicateANDGroupID
		FROM PredicateGroup pg WITH (ROWLOCK), Subscription s WITH (ROWLOCK)
		WHERE s.uidInstanceID IS NOT NULL AND
			s.uidPredicateGroupID = pg.uidPredicateORGroupID AND
			pg.fIsDistributionList = 0
		OPTION (KEEPFIXED PLAN)

		DELETE FROM Subscription WHERE uidInstanceID IS NOT NULL
		DELETE FROM UniqueSubscription WHERE uidInstanceID IS NOT NULL
	END
	else
	BEGIN
		TRUNCATE TABLE EqualsPredicates
		TRUNCATE TABLE EqualsPredicates2ndPass
		TRUNCATE TABLE GreaterThanPredicates
		TRUNCATE TABLE GreaterThanOrEqualsPredicates
		TRUNCATE TABLE LessThanPredicates
		TRUNCATE TABLE LessThanOrEqualsPredicates
		TRUNCATE TABLE ExistsPredicates
		TRUNCATE TABLE BitwiseANDPredicates
		TRUNCATE TABLE PredicateGroup
		TRUNCATE TABLE PredicateGroupZeroSum1
		TRUNCATE TABLE PredicateGroupZeroSum2

		truncate table Subscription
		truncate table UniqueSubscription
	END
END
ELSE
BEGIN
	if (@fLeaveActSubs <> 0)
	BEGIN
		INSERT INTO PredicateGroupZeroSum2 WITH (ROWLOCK)
		SELECT pg.uidPredicateORGroupID, pg.uidPredicateANDGroupID
		FROM PredicateGroup pg WITH (ROWLOCK), Subscription s WITH (ROWLOCK)
		WHERE s.uidInstanceID IS NOT NULL AND
			s.uidPredicateGroupID = pg.uidPredicateORGroupID AND
			pg.fIsDistributionList = 0
		OPTION (KEEPFIXED PLAN)

		DELETE FROM Subscription WHERE uidInstanceID IS NOT NULL
		DELETE FROM UniqueSubscription WHERE uidInstanceID IS NOT NULL
	END
	else
	BEGIN
		TRUNCATE TABLE EqualsPredicates
		TRUNCATE TABLE EqualsPredicates2ndPass
		TRUNCATE TABLE GreaterThanPredicates
		TRUNCATE TABLE GreaterThanOrEqualsPredicates
		TRUNCATE TABLE LessThanPredicates
		TRUNCATE TABLE LessThanOrEqualsPredicates
		TRUNCATE TABLE ExistsPredicates
		TRUNCATE TABLE BitwiseANDPredicates
		TRUNCATE TABLE PredicateGroup
		TRUNCATE TABLE PredicateGroupZeroSum1
		TRUNCATE TABLE PredicateGroupZeroSum2

		truncate table Subscription
		truncate table UniqueSubscription
	END
END

declare @nvcAppName nvarchar(256)
declare curse cursor for 
	SELECT nvcApplicationName FROM Applications
open curse
FETCH NEXT FROM curse INTO @nvcAppName
WHILE (@@FETCH_STATUS = 0)
BEGIN 
	exec ('truncate table [' + @nvcAppName + 'Q]')
	exec ('truncate table [' + @nvcAppName + 'Q_Suspended]')
	exec ('truncate table [InstanceStateMessageReferences_' + @nvcAppName + ']')
	exec ('truncate table [DynamicStateInfo_' + @nvcAppName + ']')
	exec ('truncate table [' + @nvcAppName + '_MessageRefCountLog]')
	
	FETCH NEXT FROM curse INTO @nvcAppName
END
close curse
deallocate curse

declare @dbname sysname
set @dbname = db_name()
BACKUP LOG @dbname WITH TRUNCATE_ONLY


GO