@model MsdnMvcWebGrid.Models.Product.PagedProductsModel
@using MsdnMvcWebGrid.Infrastructure;
@using MsdnMvcWebGrid.Domain;
@{
    ViewBag.Title = "Server Paging";
}

<h2>Server Paging</h2>


<div id="grid">

@{
    var grid = new WebGrid<Product>(null, rowsPerPage: Model.PageSize, defaultSort: "Name");
    grid.Bind(Model.Products, rowCount: Model.TotalRows, autoSortAndPage: false);
    // NOTE: I've created another html helper to allow a server-paged grid to be rendered in one call (complete with compiler type inference) as shown below
    //var grid = Html.ServerPagedGrid(Model.Products, Model.TotalRows, rowsPerPage: Model.PageSize);
}
@grid.GetHtml(columns: grid.Columns(
        grid.Column("Name", format: @<text>@Html.ActionLink(item.Name, "Details", "Product", new { id = item.ProductId }, null)</text>),
        grid.Column("ListPrice", header: "List Price", format: @<text>@item.ListPrice.ToString("0.00")</text>)
        )
    )

</div>

<p>
    Model.Products.Count() = @Model.Products.Count()
</p>
<p>
    Model.TotalRows = @Model.TotalRows
</p>
