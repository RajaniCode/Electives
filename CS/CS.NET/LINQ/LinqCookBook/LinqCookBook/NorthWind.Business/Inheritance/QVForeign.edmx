<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="1.0" xmlns:edmx="http://schemas.microsoft.com/ado/2007/06/edmx">
	<!-- EF Runtime content -->
	<edmx:Runtime>
		<!-- SSDL content -->
		<edmx:StorageModels>
			<Schema Namespace="QvForeignModel.Store" Alias="Self" Provider="System.Data.SqlClient" ProviderManifestToken="2008" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns="http://schemas.microsoft.com/ado/2006/04/edm/ssdl">
				<EntityContainer Name="QvForeignModelStoreContainer">
					<EntitySet Name="Actors" EntityType="QvForeignModel.Store.Actors" store:Type="Tables" Schema="dbo" />
					<EntitySet Name="Customers" EntityType="QvForeignModel.Store.Customers" store:Type="Tables" Schema="QV" />
					<EntitySet Name="Employee" EntityType="QvForeignModel.Store.Employee" store:Type="Tables" Schema="QV" />
					<EntitySet Name="Person" EntityType="QvForeignModel.Store.Person" store:Type="Tables" Schema="QV" />
					<AssociationSet Name="FK_Customers_Person" Association="QvForeignModel.Store.FK_Customers_Person">
						<End Role="Person" EntitySet="Person" />
						<End Role="Customers" EntitySet="Customers" />
					</AssociationSet>
					<AssociationSet Name="FK_Employee_Person" Association="QvForeignModel.Store.FK_Employee_Person">
						<End Role="Person" EntitySet="Person" />
						<End Role="Employee" EntitySet="Employee" />
					</AssociationSet>
				</EntityContainer>
				<EntityType Name="Actors">
					<Key>
						<PropertyRef Name="ActorId" />
					</Key>
					<Property Name="ActorId" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
					<Property Name="Name" Type="varchar" Nullable="false" MaxLength="50" />
				</EntityType>
				<EntityType Name="Customers">
					<Key>
						<PropertyRef Name="CustomerId" />
					</Key>
					<Property Name="CustomerId" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
					<Property Name="AccountNo" Type="varchar" Nullable="false" MaxLength="50" />
					<Property Name="PersonId" Type="int" Nullable="false" />
				</EntityType>
				<EntityType Name="Employee">
					<Key>
						<PropertyRef Name="EmployeeId" />
					</Key>
					<Property Name="EmployeeId" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
					<Property Name="CompanyName" Type="varchar" Nullable="false" MaxLength="50" />
					<Property Name="PersonId" Type="int" Nullable="false" />
				</EntityType>
				<EntityType Name="Person">
					<Key>
						<PropertyRef Name="PersonId" />
					</Key>
					<Property Name="PersonId" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
					<Property Name="Name" Type="varchar" Nullable="false" MaxLength="50" />
				</EntityType>
				<Association Name="FK_Customers_Person">
					<End Role="Person" Type="QvForeignModel.Store.Person" Multiplicity="1" />
					<End Role="Customers" Type="QvForeignModel.Store.Customers" Multiplicity="*" />
					<ReferentialConstraint>
						<Principal Role="Person">
							<PropertyRef Name="PersonId" />
						</Principal>
						<Dependent Role="Customers">
							<PropertyRef Name="PersonId" />
						</Dependent>
					</ReferentialConstraint>
				</Association>
				<Association Name="FK_Employee_Person">
					<End Role="Person" Type="QvForeignModel.Store.Person" Multiplicity="1" />
					<End Role="Employee" Type="QvForeignModel.Store.Employee" Multiplicity="*" />
					<ReferentialConstraint>
						<Principal Role="Person">
							<PropertyRef Name="PersonId" />
						</Principal>
						<Dependent Role="Employee">
							<PropertyRef Name="PersonId" />
						</Dependent>
					</ReferentialConstraint>
				</Association>
				<Function IsComposable="false" BuiltIn="false" Name="InsertCustomer">
					<CommandText>
						declare @personid int
						insert into qv.person(Name) values (@Name)
						set @personid = SCOPE_IDENTITY()
						insert into qv.Customers(AccountNo,PersonId) values (@AccountNo,@personid)
						select @personid as PersonId,SCOPE_IDENTITY() as CustomerId
					</CommandText>
					<Parameter Name="Name" Type="varchar" Mode="In" />
					<Parameter Name="AccountNo" Type="varchar" Mode="In" />
				</Function>
				<Function IsComposable="false" BuiltIn="false" Name="UpdateCustomer">
					<CommandText>
						update qv.person set Name = @Name where personid = @PersonId
						update qv.Customers set AccountNo =@AccountNo where CustomerId =@CustomerId
					</CommandText>
					<Parameter Name="Name" Type="varchar" Mode="In" />
					<Parameter Name="AccountNo" Type="varchar" Mode="In" />
					<Parameter Name="PersonId" Type="int" Mode="In" />
					<Parameter Name="CustomerId" Type="int" Mode="In" />
				</Function>
				<Function  IsComposable="false" BuiltIn="false" Name="DeleteCustomer">
					<CommandText>
						delete qv.person where personid =@PersonId
						delete qv.Customers where personid = @PersonId
					</CommandText>
					<Parameter Name="PersonId" Type="int" Mode="In" />
				</Function>
				<Function Name="InsertEmployee" IsComposable="false" BuiltIn="false">
					<CommandText>
						declare @personid int
						insert into qv.person(Name) values (@Name)
						set @personid = SCOPE_IDENTITY()
						insert into qv.Employee(CompanyName,PersonId) values (@CompanyName,@personid)
						select @personid as PersonId,SCOPE_IDENTITY() as EmployeeId
					</CommandText>
					<Parameter Name="Name" Type="varchar" Mode="In" />
					<Parameter Name="CompanyName" Type="varchar" Mode="In" />
				</Function>
				<Function Name="UpdateEmployee" IsComposable="false" BuiltIn="false">
					<CommandText>
						update qv.person set Name = @Name where personid = @PersonId
						update qv.Customers set AccountNo =@AccountNo where CustomerId =@CustomerId
					</CommandText>
					<Parameter Name="Name" Type="varchar" Mode="In" />
					<Parameter Name="CompanyName" Type="varchar" Mode="In" />
					<Parameter Name="PersonId" Type="int" Mode="In" />
					<Parameter Name="EmployeeId" Type="int" Mode="In" />
				</Function>
				<Function  IsComposable="false" BuiltIn="false" Name="DeleteEmployee">
					<CommandText>
						delete qv.person where personid =@PersonId
						delete qv.Employee where personid = @PersonId
					</CommandText>
					<Parameter Name="PersonId" Type="int" Mode="In" />
				</Function>
			</Schema>
		</edmx:StorageModels>
		<!-- CSDL content -->
		<edmx:ConceptualModels>
			<Schema Namespace="QvForeignModel" Alias="Self" xmlns="http://schemas.microsoft.com/ado/2006/04/edm">
				<EntityContainer Name="QvForeignEntities">
					<EntitySet Name="Persons" EntityType="QvForeignModel.Person" />
					<EntitySet Name="Actors" EntityType="QvForeignModel.Actors" />
				</EntityContainer>
				<EntityType Name="Customer" BaseType="QvForeignModel.Person">
					<Property Name="AccountNo" Type="String" Nullable="false" MaxLength="50" Unicode="false" FixedLength="false" />
					<Property Name="CustomerId" Type="Int32" Nullable="false" />
				</EntityType>
				<EntityType Name="Employee" BaseType="QvForeignModel.Person">
					<Property Name="CompanyName" Type="String" Nullable="false" MaxLength="50" Unicode="false" FixedLength="false" />
					<Property Name="EmployeeId" Type="Int32" Nullable="false" />
				</EntityType>
				<EntityType Abstract="true" Name="Person">
					<Key>
						<PropertyRef Name="PersonId" />
					</Key>
					<Property Name="PersonId" Type="Int32" Nullable="false" />
					<Property Name="Name" Type="String" Nullable="false" MaxLength="50" Unicode="false" FixedLength="false" />
				</EntityType>
				<EntityType Name="Actors">
					<Key>
						<PropertyRef Name="ActorId" />
					</Key>
					<Property Name="ActorId" Type="Int32" Nullable="false" />
					<Property Name="Name" Type="String" Nullable="false" />
				</EntityType>
			</Schema>
		</edmx:ConceptualModels>
		<!-- C-S mapping content -->
		<edmx:Mappings>
			<Mapping Space="C-S" xmlns="urn:schemas-microsoft-com:windows:storage:mapping:CS">
				<EntityContainerMapping StorageEntityContainer="QvForeignModelStoreContainer" CdmEntityContainer="QvForeignEntities">
					<EntitySetMapping Name="Persons">
						<QueryView>
							select value
							case
							when (c.PersonId is not null) then
							QvForeignModel.Customer(p.PersonId,p.Name,c.AccountNo,c.CustomerId)
							when (e.PersonId  is not null) then
							QvForeignModel.Employee(p.PersonId,p.Name,e.CompanyName,e.EmployeeId)
							END
							from QvForeignModelStoreContainer.Person as p
							left join QvForeignModelStoreContainer.Customers as c on p.PersonId = c.PersonId
							left join QvForeignModelStoreContainer.Employee as e on p.PersonId = e.PersonId
						</QueryView>
						<EntityTypeMapping TypeName="QvForeignModel.Customer">
							<ModificationFunctionMapping>
								<InsertFunction FunctionName="QvForeignModel.Store.InsertCustomer">
									<ScalarProperty Name="Name" ParameterName="Name"/>
									<ScalarProperty Name="AccountNo" ParameterName="AccountNo" />
									<ResultBinding Name="PersonId" ColumnName="PersonId"/>
									<ResultBinding Name="CustomerId" ColumnName="CustomerId"/>
								</InsertFunction>
								<UpdateFunction FunctionName="QvForeignModel.Store.UpdateCustomer">
									<ScalarProperty Name="Name" ParameterName="Name" Version="Current"/>
									<ScalarProperty Name="AccountNo" ParameterName="AccountNo" Version="Current" />
									<ScalarProperty Name="PersonId" ParameterName="PersonId" Version="Current"/>
									<ScalarProperty Name="CustomerId" ParameterName="CustomerId" Version="Current"/>
								</UpdateFunction>
								<DeleteFunction FunctionName="QvForeignModel.Store.DeleteCustomer">
									<ScalarProperty Name="PersonId" ParameterName="PersonId"/>
								</DeleteFunction>
							</ModificationFunctionMapping>
						</EntityTypeMapping>
						<EntityTypeMapping TypeName="QvForeignModel.Employee">
							<ModificationFunctionMapping>
								<InsertFunction FunctionName="QvForeignModel.Store.InsertEmployee">
									<ScalarProperty Name="Name" ParameterName="Name"/>
									<ScalarProperty Name="CompanyName" ParameterName="CompanyName" />
									<ResultBinding Name="PersonId" ColumnName="PersonId"/>
									<ResultBinding Name="EmployeeId" ColumnName="EmployeeId"/>
								</InsertFunction>
								<UpdateFunction FunctionName="QvForeignModel.Store.UpdateEmployee">
									<ScalarProperty Name="Name" ParameterName="Name" Version="Current"/>
									<ScalarProperty Name="CompanyName" ParameterName="CompanyName" Version="Current" />
									<ScalarProperty Name="PersonId" ParameterName="PersonId" Version="Current"/>
									<ScalarProperty Name="EmployeeId" ParameterName="EmployeeId" Version="Current"/>
								</UpdateFunction>
								<DeleteFunction FunctionName="QvForeignModel.Store.DeleteEmployee">
									<ScalarProperty Name="PersonId" ParameterName="PersonId"/>
								</DeleteFunction>
							</ModificationFunctionMapping>
						</EntityTypeMapping>
					</EntitySetMapping>
					<EntitySetMapping Name="Actors">
						<EntityTypeMapping TypeName="IsTypeOf(QvForeignModel.Actors)">
							<MappingFragment StoreEntitySet="Actors">
								<ScalarProperty Name="Name" ColumnName="Name" />
								<ScalarProperty Name="ActorId" ColumnName="ActorId" />
							</MappingFragment>
						</EntityTypeMapping>
					</EntitySetMapping>
				</EntityContainerMapping>
			</Mapping>
		</edmx:Mappings>
	</edmx:Runtime>
	<!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
	<edmx:Designer xmlns="http://schemas.microsoft.com/ado/2007/06/edmx">
		<edmx:Connection>
			<DesignerInfoPropertySet>
				<DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
			</DesignerInfoPropertySet>
		</edmx:Connection>
		<edmx:Options>
			<DesignerInfoPropertySet>
				<DesignerProperty Name="ValidateOnBuild" Value="False" />
			</DesignerInfoPropertySet>
		</edmx:Options>
		<!-- Diagram content (shape and connector positions) -->
		<edmx:Diagrams>
			<Diagram Name="QVForeign">
				<EntityTypeShape EntityType="QvForeignModel.Customer" Width="1.5" PointX="4" PointY="3.625" Height="1.2636116536458326" IsExpanded="true" />
				<EntityTypeShape EntityType="QvForeignModel.Employee" Width="1.5" PointX="2" PointY="3.625" Height="1.2636116536458326" IsExpanded="true" />
				<EntityTypeShape EntityType="QvForeignModel.Person" Width="1.5" PointX="3" PointY="1.5" Height="1.2636116536458335" IsExpanded="true" />
				<InheritanceConnector EntityType="QvForeignModel.Customer" ManuallyRouted="false">
					<ConnectorPoint PointX="4.25" PointY="2.7636116536458335" />
					<ConnectorPoint PointX="4.25" PointY="3.625" />
				</InheritanceConnector>
				<InheritanceConnector EntityType="QvForeignModel.Employee" ManuallyRouted="false">
					<ConnectorPoint PointX="3.25" PointY="2.7636116536458335" />
					<ConnectorPoint PointX="3.25" PointY="3.625" />
				</InheritanceConnector>
				<EntityTypeShape EntityType="QvForeignModel.Actors" Width="1.5" PointX="9.5" PointY="1" Height="1.4033821614583331" />
			</Diagram>
		</edmx:Diagrams>
	</edmx:Designer>
</edmx:Edmx>