//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("ManyToManyModel", "Show_Sponsor", "MusicalShow", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.MusicalShow), "Sponsors", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Sponsor))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("ManyToManyModel", "CourseStudentCourse", "Course", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NorthWind.Business.EF.ManyToManyRelationship.Course), "StudentCourse", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.StudentCourse))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("ManyToManyModel", "StudentStudentCourse", "Student", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NorthWind.Business.EF.ManyToManyRelationship.Student), "StudentCourse", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.StudentCourse))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("ManyToManyModel", "FK_MemberShip_Clubs", "Clubs", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NorthWind.Business.EF.ManyToManyRelationship.Club), "MemberShip", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.MemberShip))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("ManyToManyModel", "FK_MemberShip_Members", "Members", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NorthWind.Business.EF.ManyToManyRelationship.Members), "MemberShip", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.MemberShip))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("ManyToManyModel", "ClubMembers", "Club", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Club), "Members", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Members))]

// Original file name:
// Generation date: 10/5/2008 2:19:11 PM
namespace NorthWind.Business.EF.ManyToManyRelationship
{
    
    /// <summary>
    /// There are no comments for ManyToManyEntities in the schema.
    /// </summary>
    public partial class ManyToManyEntities : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new ManyToManyEntities object using the connection string found in the 'ManyToManyEntities' section of the application configuration file.
        /// </summary>
        public ManyToManyEntities() : 
                base("name=ManyToManyEntities", "ManyToManyEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new ManyToManyEntities object.
        /// </summary>
        public ManyToManyEntities(string connectionString) : 
                base(connectionString, "ManyToManyEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new ManyToManyEntities object.
        /// </summary>
        public ManyToManyEntities(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "ManyToManyEntities")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for MusicalShows in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<MusicalShow> MusicalShows
        {
            get
            {
                if ((this._MusicalShows == null))
                {
                    this._MusicalShows = base.CreateQuery<MusicalShow>("[MusicalShows]");
                }
                return this._MusicalShows;
            }
        }
        private global::System.Data.Objects.ObjectQuery<MusicalShow> _MusicalShows;
        /// <summary>
        /// There are no comments for Sponsors in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Sponsor> Sponsors
        {
            get
            {
                if ((this._Sponsors == null))
                {
                    this._Sponsors = base.CreateQuery<Sponsor>("[Sponsors]");
                }
                return this._Sponsors;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Sponsor> _Sponsors;
        /// <summary>
        /// There are no comments for CourseSet in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Course> CourseSet
        {
            get
            {
                if ((this._CourseSet == null))
                {
                    this._CourseSet = base.CreateQuery<Course>("[CourseSet]");
                }
                return this._CourseSet;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Course> _CourseSet;
        /// <summary>
        /// There are no comments for Students in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Student> Students
        {
            get
            {
                if ((this._Students == null))
                {
                    this._Students = base.CreateQuery<Student>("[Students]");
                }
                return this._Students;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Student> _Students;
        /// <summary>
        /// There are no comments for StudentCourse in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<StudentCourse> StudentCourse
        {
            get
            {
                if ((this._StudentCourse == null))
                {
                    this._StudentCourse = base.CreateQuery<StudentCourse>("[StudentCourse]");
                }
                return this._StudentCourse;
            }
        }
        private global::System.Data.Objects.ObjectQuery<StudentCourse> _StudentCourse;
        /// <summary>
        /// There are no comments for ClubSet in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Club> ClubSet
        {
            get
            {
                if ((this._ClubSet == null))
                {
                    this._ClubSet = base.CreateQuery<Club>("[ClubSet]");
                }
                return this._ClubSet;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Club> _ClubSet;
        /// <summary>
        /// There are no comments for Members in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Members> Members
        {
            get
            {
                if ((this._Members == null))
                {
                    this._Members = base.CreateQuery<Members>("[Members]");
                }
                return this._Members;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Members> _Members;
        /// <summary>
        /// There are no comments for MemberShip in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<MemberShip> MemberShip
        {
            get
            {
                if ((this._MemberShip == null))
                {
                    this._MemberShip = base.CreateQuery<MemberShip>("[MemberShip]");
                }
                return this._MemberShip;
            }
        }
        private global::System.Data.Objects.ObjectQuery<MemberShip> _MemberShip;
        /// <summary>
        /// There are no comments for MusicalShows in the schema.
        /// </summary>
        public void AddToMusicalShows(MusicalShow musicalShow)
        {
            base.AddObject("MusicalShows", musicalShow);
        }
        /// <summary>
        /// There are no comments for Sponsors in the schema.
        /// </summary>
        public void AddToSponsors(Sponsor sponsor)
        {
            base.AddObject("Sponsors", sponsor);
        }
        /// <summary>
        /// There are no comments for CourseSet in the schema.
        /// </summary>
        public void AddToCourseSet(Course course)
        {
            base.AddObject("CourseSet", course);
        }
        /// <summary>
        /// There are no comments for Students in the schema.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
        /// <summary>
        /// There are no comments for StudentCourse in the schema.
        /// </summary>
        public void AddToStudentCourse(StudentCourse studentCourse)
        {
            base.AddObject("StudentCourse", studentCourse);
        }
        /// <summary>
        /// There are no comments for ClubSet in the schema.
        /// </summary>
        public void AddToClubSet(Club club)
        {
            base.AddObject("ClubSet", club);
        }
        /// <summary>
        /// There are no comments for Members in the schema.
        /// </summary>
        public void AddToMembers(Members members)
        {
            base.AddObject("Members", members);
        }
        /// <summary>
        /// There are no comments for MemberShip in the schema.
        /// </summary>
        public void AddToMemberShip(MemberShip memberShip)
        {
            base.AddObject("MemberShip", memberShip);
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.MusicalShow in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ShowId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="MusicalShow")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class MusicalShow : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new MusicalShow object.
        /// </summary>
        /// <param name="showId">Initial value of ShowId.</param>
        /// <param name="showName">Initial value of ShowName.</param>
        public static MusicalShow CreateMusicalShow(int showId, string showName)
        {
            MusicalShow musicalShow = new MusicalShow();
            musicalShow.ShowId = showId;
            musicalShow.ShowName = showName;
            return musicalShow;
        }
        /// <summary>
        /// There are no comments for Property ShowId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowId
        {
            get
            {
                return this._ShowId;
            }
            set
            {
                this.OnShowIdChanging(value);
                this.ReportPropertyChanging("ShowId");
                this._ShowId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("ShowId");
                this.OnShowIdChanged();
            }
        }
        private int _ShowId;
        partial void OnShowIdChanging(int value);
        partial void OnShowIdChanged();
        /// <summary>
        /// There are no comments for Property ShowName in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowName
        {
            get
            {
                return this._ShowName;
            }
            set
            {
                this.OnShowNameChanging(value);
                this.ReportPropertyChanging("ShowName");
                this._ShowName = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("ShowName");
                this.OnShowNameChanged();
            }
        }
        private string _ShowName;
        partial void OnShowNameChanging(string value);
        partial void OnShowNameChanged();
        /// <summary>
        /// There are no comments for Property Cost in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Nullable<decimal> Cost
        {
            get
            {
                return this._Cost;
            }
            set
            {
                this.OnCostChanging(value);
                this.ReportPropertyChanging("Cost");
                this._Cost = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Cost");
                this.OnCostChanged();
            }
        }
        private global::System.Nullable<decimal> _Cost;
        partial void OnCostChanging(global::System.Nullable<decimal> value);
        partial void OnCostChanged();
        /// <summary>
        /// There are no comments for Sponsors in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "Show_Sponsor", "Sponsors")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Sponsor> Sponsors
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Sponsor>("ManyToManyModel.Show_Sponsor", "Sponsors");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Sponsor>("ManyToManyModel.Show_Sponsor", "Sponsors", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.Sponsor in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SponsorId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="Sponsor")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Sponsor : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Sponsor object.
        /// </summary>
        /// <param name="sponsorId">Initial value of SponsorId.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Sponsor CreateSponsor(int sponsorId, string name)
        {
            Sponsor sponsor = new Sponsor();
            sponsor.SponsorId = sponsorId;
            sponsor.Name = name;
            return sponsor;
        }
        /// <summary>
        /// There are no comments for Property SponsorId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int SponsorId
        {
            get
            {
                return this._SponsorId;
            }
            set
            {
                this.OnSponsorIdChanging(value);
                this.ReportPropertyChanging("SponsorId");
                this._SponsorId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("SponsorId");
                this.OnSponsorIdChanged();
            }
        }
        private int _SponsorId;
        partial void OnSponsorIdChanging(int value);
        partial void OnSponsorIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Phone in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                this.OnPhoneChanging(value);
                this.ReportPropertyChanging("Phone");
                this._Phone = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("Phone");
                this.OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        /// <summary>
        /// There are no comments for MusicalShows in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "Show_Sponsor", "MusicalShow")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<MusicalShow> MusicalShows
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<MusicalShow>("ManyToManyModel.Show_Sponsor", "MusicalShow");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<MusicalShow>("ManyToManyModel.Show_Sponsor", "MusicalShow", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.Course in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CourseId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="Course")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Course : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Course object.
        /// </summary>
        /// <param name="courseId">Initial value of CourseId.</param>
        /// <param name="courseName">Initial value of CourseName.</param>
        public static Course CreateCourse(int courseId, string courseName)
        {
            Course course = new Course();
            course.CourseId = courseId;
            course.CourseName = courseName;
            return course;
        }
        /// <summary>
        /// There are no comments for Property CourseId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseId
        {
            get
            {
                return this._CourseId;
            }
            set
            {
                this.OnCourseIdChanging(value);
                this.ReportPropertyChanging("CourseId");
                this._CourseId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("CourseId");
                this.OnCourseIdChanged();
            }
        }
        private int _CourseId;
        partial void OnCourseIdChanging(int value);
        partial void OnCourseIdChanged();
        /// <summary>
        /// There are no comments for Property CourseName in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName
        {
            get
            {
                return this._CourseName;
            }
            set
            {
                this.OnCourseNameChanging(value);
                this.ReportPropertyChanging("CourseName");
                this._CourseName = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("CourseName");
                this.OnCourseNameChanged();
            }
        }
        private string _CourseName;
        partial void OnCourseNameChanging(string value);
        partial void OnCourseNameChanged();
        /// <summary>
        /// There are no comments for StudentCourses in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "CourseStudentCourse", "StudentCourse")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<StudentCourse> StudentCourses
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<StudentCourse>("ManyToManyModel.CourseStudentCourse", "StudentCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<StudentCourse>("ManyToManyModel.CourseStudentCourse", "StudentCourse", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.Student in the schema.
    /// </summary>
    /// <KeyProperties>
    /// StudentId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="Student")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Student : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentId">Initial value of StudentId.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Student CreateStudent(int studentId, string name)
        {
            Student student = new Student();
            student.StudentId = studentId;
            student.Name = name;
            return student;
        }
        /// <summary>
        /// There are no comments for Property StudentId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId
        {
            get
            {
                return this._StudentId;
            }
            set
            {
                this.OnStudentIdChanging(value);
                this.ReportPropertyChanging("StudentId");
                this._StudentId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("StudentId");
                this.OnStudentIdChanged();
            }
        }
        private int _StudentId;
        partial void OnStudentIdChanging(int value);
        partial void OnStudentIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for StudentCourse in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "StudentStudentCourse", "StudentCourse")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<StudentCourse> StudentCourse
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<StudentCourse>("ManyToManyModel.StudentStudentCourse", "StudentCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<StudentCourse>("ManyToManyModel.StudentStudentCourse", "StudentCourse", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.StudentCourse in the schema.
    /// </summary>
    /// <KeyProperties>
    /// StudentId
    /// CourseId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="StudentCourse")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class StudentCourse : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new StudentCourse object.
        /// </summary>
        /// <param name="studentId">Initial value of StudentId.</param>
        /// <param name="courseId">Initial value of CourseId.</param>
        public static StudentCourse CreateStudentCourse(int studentId, int courseId)
        {
            StudentCourse studentCourse = new StudentCourse();
            studentCourse.StudentId = studentId;
            studentCourse.CourseId = courseId;
            return studentCourse;
        }
        /// <summary>
        /// There are no comments for Property StudentId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId
        {
            get
            {
                return this._StudentId;
            }
            set
            {
                this.OnStudentIdChanging(value);
                this.ReportPropertyChanging("StudentId");
                this._StudentId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("StudentId");
                this.OnStudentIdChanged();
            }
        }
        private int _StudentId;
        partial void OnStudentIdChanging(int value);
        partial void OnStudentIdChanged();
        /// <summary>
        /// There are no comments for Property CourseId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseId
        {
            get
            {
                return this._CourseId;
            }
            set
            {
                this.OnCourseIdChanging(value);
                this.ReportPropertyChanging("CourseId");
                this._CourseId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("CourseId");
                this.OnCourseIdChanged();
            }
        }
        private int _CourseId;
        partial void OnCourseIdChanging(int value);
        partial void OnCourseIdChanged();
        /// <summary>
        /// There are no comments for Course in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "CourseStudentCourse", "Course")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Course Course
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Course>("ManyToManyModel.CourseStudentCourse", "Course").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Course>("ManyToManyModel.CourseStudentCourse", "Course").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Course in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Course> CourseReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Course>("ManyToManyModel.CourseStudentCourse", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Course>("ManyToManyModel.CourseStudentCourse", "Course", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Student in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "StudentStudentCourse", "Student")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Student Student
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Student>("ManyToManyModel.StudentStudentCourse", "Student").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Student>("ManyToManyModel.StudentStudentCourse", "Student").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Student in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Student> StudentReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Student>("ManyToManyModel.StudentStudentCourse", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Student>("ManyToManyModel.StudentStudentCourse", "Student", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.Club in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ClubId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="Club")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Club : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="clubId">Initial value of ClubId.</param>
        /// <param name="clubName">Initial value of ClubName.</param>
        public static Club CreateClub(int clubId, string clubName)
        {
            Club club = new Club();
            club.ClubId = clubId;
            club.ClubName = clubName;
            return club;
        }
        /// <summary>
        /// There are no comments for Property ClubId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int ClubId
        {
            get
            {
                return this._ClubId;
            }
            set
            {
                this.OnClubIdChanging(value);
                this.ReportPropertyChanging("ClubId");
                this._ClubId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("ClubId");
                this.OnClubIdChanged();
            }
        }
        private int _ClubId;
        partial void OnClubIdChanging(int value);
        partial void OnClubIdChanged();
        /// <summary>
        /// There are no comments for Property ClubName in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string ClubName
        {
            get
            {
                return this._ClubName;
            }
            set
            {
                this.OnClubNameChanging(value);
                this.ReportPropertyChanging("ClubName");
                this._ClubName = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("ClubName");
                this.OnClubNameChanged();
            }
        }
        private string _ClubName;
        partial void OnClubNameChanging(string value);
        partial void OnClubNameChanged();
        /// <summary>
        /// There are no comments for MemberShip in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "FK_MemberShip_Clubs", "MemberShip")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<MemberShip> MemberShip
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<MemberShip>("ManyToManyModel.FK_MemberShip_Clubs", "MemberShip");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<MemberShip>("ManyToManyModel.FK_MemberShip_Clubs", "MemberShip", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Members in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "ClubMembers", "Members")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Members> Members
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Members>("ManyToManyModel.ClubMembers", "Members");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Members>("ManyToManyModel.ClubMembers", "Members", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.Members in the schema.
    /// </summary>
    /// <KeyProperties>
    /// MemberId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="Members")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Members : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Members object.
        /// </summary>
        /// <param name="memberId">Initial value of MemberId.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Members CreateMembers(int memberId, string name)
        {
            Members members = new Members();
            members.MemberId = memberId;
            members.Name = name;
            return members;
        }
        /// <summary>
        /// There are no comments for Property MemberId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberId
        {
            get
            {
                return this._MemberId;
            }
            set
            {
                this.OnMemberIdChanging(value);
                this.ReportPropertyChanging("MemberId");
                this._MemberId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("MemberId");
                this.OnMemberIdChanged();
            }
        }
        private int _MemberId;
        partial void OnMemberIdChanging(int value);
        partial void OnMemberIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for MemberShip in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "FK_MemberShip_Members", "MemberShip")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<MemberShip> MemberShip
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<MemberShip>("ManyToManyModel.FK_MemberShip_Members", "MemberShip");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<MemberShip>("ManyToManyModel.FK_MemberShip_Members", "MemberShip", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Clubs in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "ClubMembers", "Club")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Club> Clubs
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Club>("ManyToManyModel.ClubMembers", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Club>("ManyToManyModel.ClubMembers", "Club", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for ManyToManyModel.MemberShip in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ClubId
    /// MemberId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="ManyToManyModel", Name="MemberShip")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class MemberShip : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new MemberShip object.
        /// </summary>
        /// <param name="clubId">Initial value of ClubId.</param>
        /// <param name="memberId">Initial value of MemberId.</param>
        /// <param name="memberDues">Initial value of MemberDues.</param>
        public static MemberShip CreateMemberShip(int clubId, int memberId, int memberDues)
        {
            MemberShip memberShip = new MemberShip();
            memberShip.ClubId = clubId;
            memberShip.MemberId = memberId;
            memberShip.MemberDues = memberDues;
            return memberShip;
        }
        /// <summary>
        /// There are no comments for Property ClubId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int ClubId
        {
            get
            {
                return this._ClubId;
            }
            set
            {
                this.OnClubIdChanging(value);
                this.ReportPropertyChanging("ClubId");
                this._ClubId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("ClubId");
                this.OnClubIdChanged();
            }
        }
        private int _ClubId;
        partial void OnClubIdChanging(int value);
        partial void OnClubIdChanged();
        /// <summary>
        /// There are no comments for Property MemberId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberId
        {
            get
            {
                return this._MemberId;
            }
            set
            {
                this.OnMemberIdChanging(value);
                this.ReportPropertyChanging("MemberId");
                this._MemberId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("MemberId");
                this.OnMemberIdChanged();
            }
        }
        private int _MemberId;
        partial void OnMemberIdChanging(int value);
        partial void OnMemberIdChanged();
        /// <summary>
        /// There are no comments for Property MemberDues in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberDues
        {
            get
            {
                return this._MemberDues;
            }
            set
            {
                this.OnMemberDuesChanging(value);
                this.ReportPropertyChanging("MemberDues");
                this._MemberDues = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("MemberDues");
                this.OnMemberDuesChanged();
            }
        }
        private int _MemberDues;
        partial void OnMemberDuesChanging(int value);
        partial void OnMemberDuesChanged();
        /// <summary>
        /// There are no comments for Clubs in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "FK_MemberShip_Clubs", "Clubs")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Club Clubs
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Club>("ManyToManyModel.FK_MemberShip_Clubs", "Clubs").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Club>("ManyToManyModel.FK_MemberShip_Clubs", "Clubs").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Clubs in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Club> ClubsReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Club>("ManyToManyModel.FK_MemberShip_Clubs", "Clubs");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Club>("ManyToManyModel.FK_MemberShip_Clubs", "Clubs", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Members in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("ManyToManyModel", "FK_MemberShip_Members", "Members")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Members Members
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Members>("ManyToManyModel.FK_MemberShip_Members", "Members").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Members>("ManyToManyModel.FK_MemberShip_Members", "Members").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Members in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Members> MembersReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Members>("ManyToManyModel.FK_MemberShip_Members", "Members");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Members>("ManyToManyModel.FK_MemberShip_Members", "Members", value);
                }
            }
        }
    }
}
