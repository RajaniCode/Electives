//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MultipleAssociationsModel", "ActorsMovies", "Actors", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Actors), "Movies", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Movies))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MultipleAssociationsModel", "ActorsMovies1", "Actors", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Actors), "Movies", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NorthWind.Business.EF.ManyToManyRelationship.Movies))]

// Original file name:
// Generation date: 10/6/2008 6:40:42 PM
namespace NorthWind.Business.EF.ManyToManyRelationship
{
    
    /// <summary>
    /// There are no comments for MultipleAssocationsEntities in the schema.
    /// </summary>
    public partial class MultipleAssocationsEntities : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new MultipleAssocationsEntities object using the connection string found in the 'MultipleAssocationsEntities' section of the application configuration file.
        /// </summary>
        public MultipleAssocationsEntities() : 
                base("name=MultipleAssocationsEntities", "MultipleAssocationsEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new MultipleAssocationsEntities object.
        /// </summary>
        public MultipleAssocationsEntities(string connectionString) : 
                base(connectionString, "MultipleAssocationsEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new MultipleAssocationsEntities object.
        /// </summary>
        public MultipleAssocationsEntities(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "MultipleAssocationsEntities")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for Actors in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Actors> Actors
        {
            get
            {
                if ((this._Actors == null))
                {
                    this._Actors = base.CreateQuery<Actors>("[Actors]");
                }
                return this._Actors;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Actors> _Actors;
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Movies> Movies
        {
            get
            {
                if ((this._Movies == null))
                {
                    this._Movies = base.CreateQuery<Movies>("[Movies]");
                }
                return this._Movies;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Movies> _Movies;
        /// <summary>
        /// There are no comments for Actors in the schema.
        /// </summary>
        public void AddToActors(Actors actors)
        {
            base.AddObject("Actors", actors);
        }
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        public void AddToMovies(Movies movies)
        {
            base.AddObject("Movies", movies);
        }
    }
    /// <summary>
    /// There are no comments for MultipleAssociationsModel.Actors in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ActorId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MultipleAssociationsModel", Name="Actors")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Actors : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Actors object.
        /// </summary>
        /// <param name="actorId">Initial value of ActorId.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Actors CreateActors(int actorId, string name)
        {
            Actors actors = new Actors();
            actors.ActorId = actorId;
            actors.Name = name;
            return actors;
        }
        /// <summary>
        /// There are no comments for Property ActorId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int ActorId
        {
            get
            {
                return this._ActorId;
            }
            set
            {
                this.OnActorIdChanging(value);
                this.ReportPropertyChanging("ActorId");
                this._ActorId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("ActorId");
                this.OnActorIdChanged();
            }
        }
        private int _ActorId;
        partial void OnActorIdChanging(int value);
        partial void OnActorIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for MoviesWithLeadingActor in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MultipleAssociationsModel", "ActorsMovies", "Movies")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Movies> MoviesWithLeadingActor
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Movies>("MultipleAssociationsModel.ActorsMovies", "Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Movies>("MultipleAssociationsModel.ActorsMovies", "Movies", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for MoviesWithSupportingRole in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MultipleAssociationsModel", "ActorsMovies1", "Movies")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Movies> MoviesWithSupportingRole
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Movies>("MultipleAssociationsModel.ActorsMovies1", "Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Movies>("MultipleAssociationsModel.ActorsMovies1", "Movies", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for MultipleAssociationsModel.Movies in the schema.
    /// </summary>
    /// <KeyProperties>
    /// MovieId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MultipleAssociationsModel", Name="Movies")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Movies : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Movies object.
        /// </summary>
        /// <param name="movieId">Initial value of MovieId.</param>
        /// <param name="title">Initial value of Title.</param>
        public static Movies CreateMovies(int movieId, string title)
        {
            Movies movies = new Movies();
            movies.MovieId = movieId;
            movies.Title = title;
            return movies;
        }
        /// <summary>
        /// There are no comments for Property MovieId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId
        {
            get
            {
                return this._MovieId;
            }
            set
            {
                this.OnMovieIdChanging(value);
                this.ReportPropertyChanging("MovieId");
                this._MovieId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("MovieId");
                this.OnMovieIdChanged();
            }
        }
        private int _MovieId;
        partial void OnMovieIdChanging(int value);
        partial void OnMovieIdChanged();
        /// <summary>
        /// There are no comments for Property Title in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                this.OnTitleChanging(value);
                this.ReportPropertyChanging("Title");
                this._Title = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        /// <summary>
        /// There are no comments for LeadingActors in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MultipleAssociationsModel", "ActorsMovies", "Actors")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Actors> LeadingActors
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Actors>("MultipleAssociationsModel.ActorsMovies", "Actors");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Actors>("MultipleAssociationsModel.ActorsMovies", "Actors", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for SupportingActors in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MultipleAssociationsModel", "ActorsMovies1", "Actors")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Actors> SupportingActors
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Actors>("MultipleAssociationsModel.ActorsMovies1", "Actors");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Actors>("MultipleAssociationsModel.ActorsMovies1", "Actors", value);
                }
            }
        }
    }
}
