//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50303.0
// 
namespace Silv4.Company.View.ModelVew.MyRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WCF_DataService")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int DeptNoField;
        
        private string EmpNameField;
        
        private int EmpNoField;
        
        private int SalaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeptNo {
            get {
                return this.DeptNoField;
            }
            set {
                if ((this.DeptNoField.Equals(value) != true)) {
                    this.DeptNoField = value;
                    this.RaisePropertyChanged("DeptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpNo {
            get {
                return this.EmpNoField;
            }
            set {
                if ((this.EmpNoField.Equals(value) != true)) {
                    this.EmpNoField = value;
                    this.RaisePropertyChanged("EmpNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyRef.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAllEmployees", ReplyAction="http://tempuri.org/IService/GetAllEmployeesResponse")]
        System.IAsyncResult BeginGetAllEmployees(System.AsyncCallback callback, object asyncState);
        
        Silv4.Company.View.ModelVew.MyRef.Employee[] EndGetAllEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/CreateEmployee", ReplyAction="http://tempuri.org/IService/CreateEmployeeResponse")]
        System.IAsyncResult BeginCreateEmployee(Silv4.Company.View.ModelVew.MyRef.Employee objEmp, System.AsyncCallback callback, object asyncState);
        
        void EndCreateEmployee(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Silv4.Company.View.ModelVew.MyRef.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Silv4.Company.View.ModelVew.MyRef.Employee[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Silv4.Company.View.ModelVew.MyRef.Employee[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Silv4.Company.View.ModelVew.MyRef.IService>, Silv4.Company.View.ModelVew.MyRef.IService {
        
        private BeginOperationDelegate onBeginGetAllEmployeesDelegate;
        
        private EndOperationDelegate onEndGetAllEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateEmployeeDelegate;
        
        private EndOperationDelegate onEndCreateEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onCreateEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAllEmployeesCompletedEventArgs> GetAllEmployeesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateEmployeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silv4.Company.View.ModelVew.MyRef.IService.BeginGetAllEmployees(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEmployees(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Silv4.Company.View.ModelVew.MyRef.Employee[] Silv4.Company.View.ModelVew.MyRef.IService.EndGetAllEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetAllEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Silv4.Company.View.ModelVew.MyRef.IService)(this)).BeginGetAllEmployees(callback, asyncState);
        }
        
        private object[] OnEndGetAllEmployees(System.IAsyncResult result) {
            Silv4.Company.View.ModelVew.MyRef.Employee[] retVal = ((Silv4.Company.View.ModelVew.MyRef.IService)(this)).EndGetAllEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEmployeesCompleted(object state) {
            if ((this.GetAllEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEmployeesCompleted(this, new GetAllEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEmployeesAsync() {
            this.GetAllEmployeesAsync(null);
        }
        
        public void GetAllEmployeesAsync(object userState) {
            if ((this.onBeginGetAllEmployeesDelegate == null)) {
                this.onBeginGetAllEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetAllEmployees);
            }
            if ((this.onEndGetAllEmployeesDelegate == null)) {
                this.onEndGetAllEmployeesDelegate = new EndOperationDelegate(this.OnEndGetAllEmployees);
            }
            if ((this.onGetAllEmployeesCompletedDelegate == null)) {
                this.onGetAllEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEmployeesDelegate, null, this.onEndGetAllEmployeesDelegate, this.onGetAllEmployeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silv4.Company.View.ModelVew.MyRef.IService.BeginCreateEmployee(Silv4.Company.View.ModelVew.MyRef.Employee objEmp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateEmployee(objEmp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Silv4.Company.View.ModelVew.MyRef.IService.EndCreateEmployee(System.IAsyncResult result) {
            base.Channel.EndCreateEmployee(result);
        }
        
        private System.IAsyncResult OnBeginCreateEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Silv4.Company.View.ModelVew.MyRef.Employee objEmp = ((Silv4.Company.View.ModelVew.MyRef.Employee)(inValues[0]));
            return ((Silv4.Company.View.ModelVew.MyRef.IService)(this)).BeginCreateEmployee(objEmp, callback, asyncState);
        }
        
        private object[] OnEndCreateEmployee(System.IAsyncResult result) {
            ((Silv4.Company.View.ModelVew.MyRef.IService)(this)).EndCreateEmployee(result);
            return null;
        }
        
        private void OnCreateEmployeeCompleted(object state) {
            if ((this.CreateEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateEmployeeAsync(Silv4.Company.View.ModelVew.MyRef.Employee objEmp) {
            this.CreateEmployeeAsync(objEmp, null);
        }
        
        public void CreateEmployeeAsync(Silv4.Company.View.ModelVew.MyRef.Employee objEmp, object userState) {
            if ((this.onBeginCreateEmployeeDelegate == null)) {
                this.onBeginCreateEmployeeDelegate = new BeginOperationDelegate(this.OnBeginCreateEmployee);
            }
            if ((this.onEndCreateEmployeeDelegate == null)) {
                this.onEndCreateEmployeeDelegate = new EndOperationDelegate(this.OnEndCreateEmployee);
            }
            if ((this.onCreateEmployeeCompletedDelegate == null)) {
                this.onCreateEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginCreateEmployeeDelegate, new object[] {
                        objEmp}, this.onEndCreateEmployeeDelegate, this.onCreateEmployeeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Silv4.Company.View.ModelVew.MyRef.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<Silv4.Company.View.ModelVew.MyRef.IService>, Silv4.Company.View.ModelVew.MyRef.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<Silv4.Company.View.ModelVew.MyRef.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAllEmployees(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllEmployees", _args, callback, asyncState);
                return _result;
            }
            
            public Silv4.Company.View.ModelVew.MyRef.Employee[] EndGetAllEmployees(System.IAsyncResult result) {
                object[] _args = new object[0];
                Silv4.Company.View.ModelVew.MyRef.Employee[] _result = ((Silv4.Company.View.ModelVew.MyRef.Employee[])(base.EndInvoke("GetAllEmployees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateEmployee(Silv4.Company.View.ModelVew.MyRef.Employee objEmp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objEmp;
                System.IAsyncResult _result = base.BeginInvoke("CreateEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateEmployee", _args, result);
            }
        }
    }
}
