5.8 Creating a New Record

The form for registering a new event is now in place. Now we need to refactor the code for creating a new event so that it uses the new Calendar context module.

lib/neon/calendar/calendar.ex
defmodule Neon.Calendar do

  alias Neon.Repo
  alias Neon.Calendar.Event

  def create_event(attrs \\ %{}) do
    %Event{}
    

  end

  def list_events do
    Repo.all(Event)
  end

  def get_event(id) do
    Repo.get(Event, id) |> Repo.preload(:comments)
  end

  def change_event(%Event{} = event) do
    Event.changeset(event, %{})
  end
end


1. Inside the create_event function on the Calendar module, first pipe the %Event{} Struct to the Event.changeset function and then to the Repo.insert function. Remember, Event.changeset takes two arguments.

Answer:
lib/neon/calendar/calendar.ex

2. Back in the EventController, call Calendar.create_event function from the create action.

Answer: 
lib/neon/calendar/calendar.ex
