2.2 Pull Requests Within a Repository


We're going to "come to you" and collaborate on your fork of the "dojo_rules" repository. To start out, we'll try doing some work on a local branch with a pull request.

GitHub Username: pluralschool

1. In your fork of "dojo_rules", add the user "codeschool-kiddo" as a collaborator. This will allow us to work together from here on out.

To add us as a collaborator, head over to your fork of "dojo_rules" and click on Settings (bottom right). From there click "Collaborators" and enter the name "codeschool-kiddo".

Answer: 

https://github.com/pluralschool/dojo_rules/settings

click "Collaborators"

https://github.com/pluralschool/dojo_rules/settings/collaboration

codeschool-kiddo (Select Auto Complete)

Add collaborator


2. Create a branch of the "dojo_rules" repository locally and name it "deadly_skills". Push it up to GitHub. At this point, the branch will have the same content as the master branch.

Answer:

Welcome to Git (version 1.9.5-preview20150319)

Run 'git help git' to display the help index.
Run 'git help <command>' to display help for specific commands.

Rajani@RAJANIDELL ~
$ cd "E:\Working\Git\Code School Course\4 Mastering GitHub\2 Single Reposi
tory Workflows\1 Single Repository Workflows\dojo_rules"

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (master)
$ git fetch

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (master)
$ git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/gh-pages
  remotes/origin/master

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (master)
$ git checkout deadly_skills
error: pathspec 'deadly_skills' did not match any file(s) known to git.

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (master)
$ git checkout f2
error: pathspec 'f2' did not match any file(s) known to git.

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (master)
$ git checkout -b deadly_skills
Switched to a new branch 'deadly_skills'

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git branch
* deadly_skills
  master

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git push origin deadly_skills
Username for 'https://github.com': pluralschool
Password for 'https://pluralschool@github.com':
Total 0 (delta 0), reused 0 (delta 0)
To https://github.com/pluralschool/dojo_rules.git
 * [new branch]      deadly_skills -> deadly_skills

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git commit
On branch deadly_skills
nothing to commit, working directory clean

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$

3. On your "deadly_skills" branch, open up your introduction file and modify it to include a list of your deadly skills (for example: Git, JavaScript, Ruby). Since this file is Markdown, you can specify these one per line starting the line with a * to make them into a list.

Add, commit and push your changes up to GitHub. Be sure to push to the remote branch with the same name as your local branch – deadly_skills.

Answer:

Welcome to Git (version 1.9.5-preview20150319)


Run 'git help git' to display the help index.
Run 'git help <command>' to display help for specific commands.

Rajani@RAJANIDELL ~
$ cd "E:\Working\Git\Code School Course\4 Mastering GitHub\2 Single Reposi
tory Workflows\1 Single Repository Workflows\dojo_rules"

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git branch
* deadly_skills
  master

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git status
On branch deadly_skills
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   introduction.md

no changes added to commit (use "git add" and/or "git commit -a")

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git commit -a -m "Include list of deadly skills"
[deadly_skills f8c4af8] Include list of deadly skills
 1 file changed, 9 insertions(+), 1 deletion(-)

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git push origin deadly_skills
Username for 'https://github.com': pluralschool
Password for 'https://pluralschool@github.com':
Counting objects: 7, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 401 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
To https://github.com/pluralschool/dojo_rules.git
   437ba06..f8c4af8  deadly_skills -> deadly_skills

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$ git commit
On branch deadly_skills
nothing to commit, working directory clean

Rajani@RAJANIDELL /e/Working/Git/Code School Course/4 Mastering GitHub/2 Single Repository Workflows/1 Single Repository Workflows/dojo_rules (deadly_skills)
$


4. Create a pull request from your branch to your master. When you create a pull request by default it'll go from your master branch back to "deadlyvipers/dojo_rules". In this case though, we want the pull request to go from "dojo_rules/deadly_skills" to "dojo_rules/master" – both in your repository.

To do this, create a pull request on GitHub. Make sure the base is your master and the "compare" is your "deadly_skills" branch. This should show all of the changes you made on your branch. 

Hint:

This can be done entirely on the GitHub website, not through the console. Head over to your fork of the dojo_rules repository, go to "Pull Requests", then click the New Pull Request button.

Answer:

First we need to add "codeschool-kiddo" as a collborator. Go to your fork of "dojo_rules" and click "Settings" on the right. Click "Collaborators", which will likely prompt you to verify your GitHub password. After entering it, enter "codeschool-kiddo" into the form and select "codeschool-kiddo" from the autocomplete list then click "Add Collaborator".

Next, we'll need to make a few changes to the "introduction.md" file.

git checkout -b deadly_skills
git push origin deadly_skills
printf "On my way to becoming a GitHub Master. I love Ruby and JavaScript.\n\n* Ruby on Rails\n*Git" > introduction.md
git commit -am "Added deadly skills"
git push origin deadly_skills

Lastly, to create a pull request from your "deadly_skills" branch back to your "master" branch, head to your repo and click on "Pull Requests". Then click "New Pull Request" at the top right. On the left side you'll see a "base fork". Change this so that it says "base: master".


Now the pull request should be comparing "master" and "master". However, we want to change this a little more. The right select box should say "compare: master". Click on this, then select your branch – "deadly_skills". You should see a diff with your new deadly skills added.

With this all setup, click "Create pull request", give it any description you would like, then click "Create pull request". After that, you should be able to click "Submit Answer" and move on! Whew!
